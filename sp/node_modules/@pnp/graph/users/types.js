import { __decorate } from "tslib";
import { graphInvokableFactory } from "../graphqueryable.js";
import { _DirectoryObject, DirectoryObjects, _DirectoryObjects } from "../directory-objects/types.js";
import { defaultPath, updateable, deleteable, getById } from "../decorators.js";
let _User = class _User extends _DirectoryObject {
    /**
    * The groups and directory roles associated with the user
    */
    get memberOf() {
        return DirectoryObjects(this, "memberOf");
    }
    /**
    * The groups and directory roles associated with the user
    */
    get transitiveMemberOf() {
        return DirectoryObjects(this, "transitiveMemberOf");
    }
    /**
     * Retrieve a collection of person objects ordered by their relevance to the user
     */
    get people() {
        return People(this);
    }
    /**
    * People that have direct reports to the user
    */
    get directReports() {
        return People(this, "directReports");
    }
    /**
    * The manager associated with this user
    */
    get manager() {
        return User(this, "manager");
    }
};
_User = __decorate([
    updateable(),
    deleteable()
], _User);
export { _User };
export const User = graphInvokableFactory(_User);
let _Users = class _Users extends _DirectoryObjects {
};
_Users = __decorate([
    defaultPath("users"),
    getById(User)
], _Users);
export { _Users };
export const Users = graphInvokableFactory(_Users);
let _People = class _People extends _DirectoryObjects {
};
_People = __decorate([
    defaultPath("people")
], _People);
export { _People };
export const People = graphInvokableFactory(_People);
//# sourceMappingURL=types.js.map