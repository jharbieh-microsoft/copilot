import { __decorate } from "tslib";
import { _GraphQueryableInstance, _GraphQueryableCollection, graphInvokableFactory } from "../graphqueryable.js";
import { body } from "@pnp/queryable";
import { defaultPath, deleteable, updateable, getById } from "../decorators.js";
import { graphPost } from "../operations.js";
/**
 * Subscription
 */
let _Subscription = class _Subscription extends _GraphQueryableInstance {
};
_Subscription = __decorate([
    deleteable(),
    updateable()
], _Subscription);
export { _Subscription };
export const Subscription = graphInvokableFactory(_Subscription);
/**
 * Subscriptions
 */
let _Subscriptions = class _Subscriptions extends _GraphQueryableCollection {
    /**
     * Create a new Subscription.
     *
     * @param changeType Indicates the type of change in the subscribed resource that will raise a notification. The supported values are: created, updated, deleted.
     * @param notificationUrl The URL of the endpoint that will receive the notifications. This URL must make use of the HTTPS protocol.
     * @param resource Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/v1.0/).
     * @param expirationDateTime Specifies the date and time when the webhook subscription expires. The time is in UTC.
     * @param props A plain object collection of additional properties you want to set on the new subscription
     *
     */
    async add(changeType, notificationUrl, resource, expirationDateTime, props = {}) {
        const postBody = {
            changeType,
            expirationDateTime,
            notificationUrl,
            resource,
            ...props,
        };
        const data = await graphPost(this, body(postBody));
        return {
            data,
            subscription: this.getById(data.id),
        };
    }
};
_Subscriptions = __decorate([
    defaultPath("subscriptions"),
    getById(Subscription)
], _Subscriptions);
export { _Subscriptions };
export const Subscriptions = graphInvokableFactory(_Subscriptions);
//# sourceMappingURL=types.js.map